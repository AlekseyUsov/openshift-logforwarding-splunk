{{- $fullName := include "openshift-logforwarding-splunk.fullname" . -}}
{{- $splunkSecret := printf "%s-splunk" $fullName -}}
{{- $logForwardingConfig := printf "%s-config" $fullName -}}
{{- $logForwardingCertificateName := include "openshift-logforwarding-splunk.certificateName" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}-audit
  labels:
    app.kubernetes.io/component: fluentd
{{ include "openshift-logforwarding-splunk.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.forwarding.audit.fluentd.replicas }}
  serviceName: {{ $fullName }}-audit-headless
  updateStrategy:
{{ toYaml .Values.forwarding.audit.fluentd.updateStrategy | indent 4 }}
  selector:
    matchLabels:
      app: {{ $fullName }}-audit
  template:
    metadata:
      labels:
        app: {{ $fullName }}-audit
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
        - resources:
            {{- toYaml .Values.forwarding.audit.fluentd.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          name: {{ $fullName }}-audit
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}-audit
                  key: fluentd-loglevel
            - name: SHARED_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-audit
                  key: shared_key
            - name: SPLUNK_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}-audit
                  key: splunk-hostname
            - name: SPLUNK_SOURCETYPE
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}-audit
                  key: splunk-sourcetype
            - name: SPLUNK_SOURCE
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}-audit
                  key: splunk-source
            - name: SPLUNK_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}-audit
                  key: splunk-port
            - name: SPLUNK_PROTOCOL
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}-audit
                  key: splunk-protocol
            - name: SPLUNK_INSECURE
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}-audit
                  key: splunk-insecure
            - name: SPLUNK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-audit
                  key: hec-token
            - name: SPLUNK_INDEX
              valueFrom:
                configMapKeyRef:
                  name: {{ $fullName }}-audit
                  key: splunk-index
            {{- if .Values.forwarding.audit.fluentd.ssl }}
            - name: FLUENTD_SSL_PASSPHRASE
              valueFrom:
                secretKeyRef:
                  name: {{ $fullName }}-audit
                  key: fluentd-ssl-passsphrase
            {{- end }}
          imagePullPolicy: Always
          volumeMounts:
            - name: {{ $logForwardingConfig }}
              readOnly: true
              mountPath: /etc/fluent/
            {{- if .Values.forwarding.audit.fluentd.ssl }}
            - mountPath: /secret/fluentd
              name: {{ $fullName }}-audit
              readOnly: true
            {{- end }}
            - name: buffer
              mountPath: "/var/log/fluentd"
            {{- if and (not .Values.forwarding.audit.splunk.insecure) .Values.forwarding.audit.splunk.caFile }}
            - mountPath: /secret/splunk
              name: splunk-certs
              readOnly: true
            {{- end }}
          terminationMessagePolicy: File
          image: {{ .Values.forwarding.audit.fluentd.image }}
          args:
{{- if .Values.forwarding.audit.fluentd.scl }}
            - scl
            - enable
            - rh-ruby25
            - "--"
{{- end }}
            - fluentd
          livenessProbe:
            tcpSocket:
              port: 24224
            periodSeconds: 5
            timeoutSeconds: 3
            initialDelaySeconds: 10
          readinessProbe:
            tcpSocket:
              port: 24224
            periodSeconds: 3
            timeoutSeconds: 2
            initialDelaySeconds: 2
          ports:
            - containerPort: 24224
              name: forwarder-tcp
              protocol: TCP
            - containerPort: 24224
              name: forwarder-udp
              protocol: UDP
      serviceAccount: {{ $fullName }}
      {{- with .Values.forwarding.audit.fluentd.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.forwarding.audit.fluentd.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.forwarding.audit.fluentd.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: {{ $logForwardingConfig }}
          configMap:
            name: {{ $fullName }}-audit
            items:
              - key: td-agent.conf
                path: fluent.conf
            defaultMode: 420
            optional: true
        {{- if .Values.forwarding.audit.fluentd.ssl }}
        - name: {{ $fullName }}-audit
          secret:
            secretName: {{ $fullName }}-audit
            items:
              - key: {{ $logForwardingCertificateName }}.crt
                path: tls.crt
              - key: {{ $logForwardingCertificateName }}.key
                path: tls.key
        {{- end }}
        {{- if not .Values.forwarding.audit.fluentd.persistence.enabled }}
        - name: buffer
          emptyDir: {}
        {{- end }}
        {{- if and (not .Values.forwarding.audit.splunk.insecure) .Values.forwarding.audit.splunk.caFile }}
        - name: splunk-certs
          secret:
            secretName: {{ $fullName }}-audit-splunk
            items:
              - key: splunk-ca.crt
                path: splunk-ca.crt
        {{- end }}
      dnsPolicy: ClusterFirst
  {{- if .Values.forwarding.audit.fluentd.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: buffer
    spec:
      accessModes:
      - {{ .Values.forwarding.audit.fluentd.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.forwarding.audit.fluentd.persistence.size }}
      {{- if .Values.forwarding.audit.fluentd.persistence.storageClass }}
      {{- if (eq "-" .Values.forwarding.audit.fluentd.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.forwarding.audit.fluentd.persistence.storageClass }}"
      {{- end }}
      {{- end }}
  {{- end }}
